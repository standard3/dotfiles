#################### Sound and brightness keybinds ###################
# Volume
binde  =, XF86AudioMicMute,     exec, volumectl -m toggle-mute
bindl  =, XF86AudioMute,        exec, volumectl toggle-mute
bindl  =, XF86AudioMute,        exec, ~/.config/eww/scripts/volume osd &
bindle =, XF86AudioRaiseVolume, exec, volumectl -u up
bindle =, XF86AudioRaiseVolume, exec, ~/.config/eww/scripts/volume osd &
bindle =, XF86AudioLowerVolume, exec, volumectl -u down
bindle =, XF86AudioLowerVolume, exec, ~/.config/eww/scripts/volume osd &

# Media
binde =, XF86AudioNext,         exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"`
binde =, XF86AudioPrev,         exec, playerctl previous
binde =, XF86AudioPlay,         exec, playerctl play-pause
binde =, XF86AudioStop,         exec, playerctl stop

bind = SUPER SHIFT, N,          exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"`
bind = SUPER SHIFT, B,          exec, playerctl previous
bind = SUPER SHIFT, P,          exec, playerctl play-pause

# Brightness
bindle=, XF86MonBrightnessUp,   exec, light -A 3 && ~/.config/eww/scripts/brightness osd &
bindle=, XF86MonBrightnessDown, exec, light -U 3 && ~/.config/eww/scripts/brightness osd &

######################################## Keybinds ########################################
# Apps: just normal apps
bind = SUPER, RETURN, exec, kitty
bind = SUPER, E,      exec, thunar
bind = SUPER, W,      exec, firefox

# Apps: Settings and config
bind = SUPER,      I,      exec, XDG_CURRENT_DESKTOP="gnome" gnome-control-center
bind = SUPER CTRL, V,      exec, pavucontrol 
bind = CTRL SHIFT, Escape, exec, gnome-system-monitor

# Actions 
bind = SUPER,     Q,     killactive,
bind = SUPER ALT, Space, togglefloating, 
bind = SUPER,     J,     togglesplit,

# Screenshot, Record, OCR (Optical Character Recognition), Color picker, Clipboard history
bind = ,            PRINT,  exec, QT_QPA_PLATFORM=xcb flameshot gui
bind = SUPER SHIFT, C,      exec, hyprpicker -a
bind = SUPER,       C,      exec, pkill fuzzel || cliphist list | fuzzel --no-fuzzy --dmenu | cliphist decode | wl-copy

# Lock screen
bind = SUPER,       L,      exec, swaylock -f --config ~/.config/swaylock/config
bind = SUPER SHIFT, L,      exec, swaylock -f --config ~/.config/swaylock/config && systemctl suspend

# App launcher
bind = SUPER, SPACE, exec, anyrun

###################################### eww keybinds #####################################
bind = SUPER CTRL, T,   exec, cd ~/.config/eww && scripts/switchwall
bind = SUPER ALT,  W,   exec, ~/.config/eww/scripts/toggle-topbottom.sh
bind = SUPER,      Tab, exec, ~/.config/eww/scripts/toggle-powerview.sh &
bind = SUPER,      B,   exec, ~/.config/eww/scripts/toggle-sideleft.sh &
bind = SUPER,      G,   exec, ~/.config/eww/scripts/toggle-cheatsheet.sh
bind = SUPER,      N,   exec, ~/.config/eww/scripts/toggle-sideright.sh &
bind = SUPER,      A,   exec, ~/.config/eww/scripts/toggle-dashboard.sh &

######### Cheat sheet #########

submap=cheatsheet
bind = SUPER, G,      exec, ~/.config/eww/scripts/toggle-cheatsheet.sh --close
bind = SUPER, G,      submap, reset
bind = ,      Escape, exec, ~/.config/eww/scripts/toggle-cheatsheet.sh --close
bind = ,      Escape, submap, reset
submap=reset

######### Power Menu #########
bind   = CTRL ALT,   Delete, exec,   eww open --toggle powermenu
bind   = CTRL ALT,   Delete, submap, powermenu
submap = powermenu
bind   = ,           Right,  exec,   VALUE=$(eww get powermenu_option); eww update powermenu_option=$(( VALUE % 3 == 2 || VALUE > 5 ? VALUE : VALUE + 1 ))
bind   = ,           Left,   exec,   VALUE=$(eww get powermenu_option); eww update powermenu_option=$(( VALUE % 3 == 0 || VALUE > 5 ? VALUE : VALUE - 1 ))
bind   = ,           Up,     exec,   VALUE=$(eww get powermenu_option); eww update powermenu_option=$(( VALUE > 2 ? VALUE - 3 : VALUE ))
bind   = ,           Down,   exec,   VALUE=$(eww get powermenu_option); eww update powermenu_option=$(( VALUE < 3 ? VALUE + 3 : 7 ))
bind   = ,           Return, exec,   eval $(eww get POWERMENU_COMMANDS | gojq -r ".[$(eww get powermenu_option)]")
bind   = ,           Space,  exec,   eval $(eww get POWERMENU_COMMANDS | gojq -r ".[$(eww get powermenu_option)]")
bind   = ,           Grave,  exec,   eval $(eww get POWERMENU_QUICKLAUNCHES | gojq -r ".[0]") && eww update powermenu_option=0
bind   = ,           1,      exec,   eval $(eww get POWERMENU_QUICKLAUNCHES | gojq -r ".[1]") && eww update powermenu_option=0
bind   = ,           2,      exec,   eval $(eww get POWERMENU_QUICKLAUNCHES | gojq -r ".[2]") && eww update powermenu_option=0
bind   = ,           3,      exec,   eval $(eww get POWERMENU_QUICKLAUNCHES | gojq -r ".[3]") && eww update powermenu_option=0
bind   = ,           4,      exec,   eval $(eww get POWERMENU_QUICKLAUNCHES | gojq -r ".[4]") && eww update powermenu_option=0
bind   = ,           4,      exec,   eval $(eww get POWERMENU_QUICKLAUNCHES | gojq -r ".[5]") && eww update powermenu_option=0
bind   = CTRL ALT,   Delete, exec,   eww close powermenu && eww update powermenu_option=0 
bind   = ,           Escape, exec,   eww close powermenu && eww update powermenu_option=0
bind   = ,           Space,  exec,   eww close powermenu && eww update powermenu_option=0
bind   = ,           Return, exec,   eww close powermenu && eww update powermenu_option=0
bind   = CTRL ALT,   Delete, submap, reset
bind   = ,           Escape, submap, reset 
bind   = ,           Space,  submap, reset 
bind   = ,           Return, submap, reset 
bind   = SUPER CTRL, R,      exec,   hyprctl dispatch submap reset; pkill eww; pkill bash; pkill notify-receive; eww daemon && eww open bar && eww open bgdecor &
submap = reset
#############################

######### Powerview #########
bindr  = SUPER,      SUPER_L,   exec, ~/.config/eww/scripts/toggle-powerview.sh --keypress &
submap = powerview
bind   = SUPER CTRL, right,     workspace, +1
bind   = SUPER CTRL, left,      workspace, -1
bind   = SUPER CTRL, up,        workspace, -5
bind   = SUPER CTRL, down,      workspace, +5
bind   = SUPER,      Page_Down, workspace, +1
bind   = SUPER,      Page_Up,   workspace, -1
bind   = SUPER CTRL, Page_Down, workspace, +1
bind   = SUPER CTRL, Page_Up,   workspace, -1
bind   = SUPER,      Tab,       exec, ~/.config/eww/scripts/toggle-powerview.sh --close &
bindr  = SUPER,      SUPER_L,   exec, ~/.config/eww/scripts/toggle-powerview.sh --close &
bind   = ,           Escape,    exec, ~/.config/eww/scripts/toggle-powerview.sh --close &
bind   = SUPER,      Tab,       submap, reset
bindr  = SUPER,      SUPER_L,   submap, reset
bind   = ,           Escape,    submap, reset
submap = reset
#############################

######### Edit mode #########
submap = editmode
bindm  = , mouse:272,  movewindow
bindm  = , mouse:273,  resizewindow
bindm  = , mouse:274,  movewindow
bind   = , mouse_up,   workspace, +1
bind   = , mouse_down, workspace, -1
bind   = SUPER ALT,       ampersand,  exec, ~/.config/eww/scripts/dumptows $(hyprctl activeworkspace -j | gojq '.id') 1
bind   = SUPER ALT,       eacute,     exec, ~/.config/eww/scripts/dumptows $(hyprctl activeworkspace -j | gojq '.id') 2
bind   = SUPER ALT,       quotedbl,   exec, ~/.config/eww/scripts/dumptows $(hyprctl activeworkspace -j | gojq '.id') 3
bind   = SUPER ALT,       apostrophe, exec, ~/.config/eww/scripts/dumptows $(hyprctl activeworkspace -j | gojq '.id') 4
bind   = SUPER ALT,       parenleft,  exec, ~/.config/eww/scripts/dumptows $(hyprctl activeworkspace -j | gojq '.id') 5
bind   = SUPER ALT,       minus,      exec, ~/.config/eww/scripts/dumptows $(hyprctl activeworkspace -j | gojq '.id') 6
bind   = SUPER ALT,       egrave,     exec, ~/.config/eww/scripts/dumptows $(hyprctl activeworkspace -j | gojq '.id') 7
bind   = SUPER ALT,       underscore, exec, ~/.config/eww/scripts/dumptows $(hyprctl activeworkspace -j | gojq '.id') 8
bind   = SUPER ALT SHIFT, ampersand,  exec, ~/.config/eww/scripts/swapws $(hyprctl activeworkspace -j | gojq '.id') 1
bind   = SUPER ALT SHIFT, eacute,     exec, ~/.config/eww/scripts/swapws $(hyprctl activeworkspace -j | gojq '.id') 2
bind   = SUPER ALT SHIFT, quotedbl,   exec, ~/.config/eww/scripts/swapws $(hyprctl activeworkspace -j | gojq '.id') 3
bind   = SUPER ALT SHIFT, apostrophe, exec, ~/.config/eww/scripts/swapws $(hyprctl activeworkspace -j | gojq '.id') 4
bind   = SUPER ALT SHIFT, parenleft,  exec, ~/.config/eww/scripts/swapws $(hyprctl activeworkspace -j | gojq '.id') 5
bind   = SUPER ALT SHIFT, minus,      exec, ~/.config/eww/scripts/swapws $(hyprctl activeworkspace -j | gojq '.id') 6
bind   = SUPER ALT SHIFT, egrave,     exec, ~/.config/eww/scripts/swapws $(hyprctl activeworkspace -j | gojq '.id') 7
bind   = SUPER ALT SHIFT, underscore, exec, ~/.config/eww/scripts/swapws $(hyprctl activeworkspace -j | gojq '.id') 8

bind   = , ampersand, workspace, 1
bind   = , eacute, workspace, 2
bind   = , quotedbl, workspace, 3
bind   = , apostrophe, workspace, 4
bind   = , parenleft, workspace, 5
bind   = , minus, workspace, 6
bind   = , egrave, workspace, 7
bind   = , underscore, workspace, 8
bind   = , Escape, exec, notify-send 'Edit mode disabled' 'Continue to use your device normally' -a 'Edit mode' &
bind   = , Escape, submap, reset
submap = reset

#############################

################################### eww keybinds: end #################################

## Testing
bind = SUPER ALT, f12,   exec, notify-send "Test notification" "$(hyprctl version | head -1)" -a 'Hyprland keybind'
bind = SUPER ALT, Equal, exec, notify-send "Urgent notification" "Ah hell no" -u critical -a 'Hyprland keybind'

############################ Keybinds for Hyprland ############################
# Swap windows
bind = SUPER SHIFT, left,  movewindow, l
bind = SUPER SHIFT, right, movewindow, r
bind = SUPER SHIFT, up,    movewindow, u
bind = SUPER SHIFT, down,  movewindow, d

# Move focus
bind = SUPER, left,         movefocus, l
bind = SUPER, right,        movefocus, r
bind = SUPER, up,           movefocus, u
bind = SUPER, down,         movefocus, d
bind = SUPER, BracketLeft,  movefocus, l
bind = SUPER, BracketRight, movefocus, r

# Workspace, window, tab switch with keyboard
bind = SUPER CTRL,       right,        workspace, +1
bind = SUPER CTRL,       left,         workspace, -1
bind = SUPER CTRL,       BracketLeft,  workspace, -1
bind = SUPER CTRL,       BracketRight, workspace, +1
bind = SUPER CTRL,       up,           workspace, -5
bind = SUPER CTRL,       down,         workspace, +5
bind = SUPER,            Page_Down,    workspace, +1
bind = SUPER,            Page_Up,      workspace, -1
bind = SUPER CTRL,       Page_Down,    workspace, +1
bind = SUPER CTRL,       Page_Up,      workspace, -1
bind = SUPER ALT,        Page_Down,    movetoworkspace, +1
bind = SUPER ALT,        Page_Up,      movetoworkspace, -1
bind = SUPER SHIFT,      Page_Down,    movetoworkspace, +1
bind = SUPER SHIFT,      Page_Up,      movetoworkspace, -1
bind = SUPER CTRL SHIFT, Right,        movetoworkspace, +1
bind = SUPER CTRL SHIFT, Left,         movetoworkspace, -1
bind = SUPER SHIFT,      mouse_down,   movetoworkspace, -1
bind = SUPER SHIFT,      mouse_up,     movetoworkspace, +1
bind = SUPER ALT,        mouse_down,   movetoworkspace, -1
bind = SUPER ALT,        mouse_up,     movetoworkspace, +1

# Window split ratio
binde = SUPER, Minus, splitratio, -0.1
binde = SUPER, Equal, splitratio, 0.1
binde = SUPER, Semicolon, splitratio, -0.1
binde = SUPER, Apostrophe, splitratio, 0.1

# Fullscreen
bind = SUPER, F, fullscreen, 0
bind = SUPER Shift, F, fullscreen, 1

## Switch workspaces with mainMod + [1-8]
bind = SUPER, ampersand,  workspace, 1
bind = SUPER, eacute,     workspace, 2
bind = SUPER, quotedbl,   workspace, 3
bind = SUPER, apostrophe, workspace, 4
bind = SUPER, parenleft,  workspace, 5
bind = SUPER, minus,      workspace, 6
bind = SUPER, egrave,     workspace, 7
bind = SUPER, underscore, workspace, 8

# Special workspace
bind = SUPER,      S,   togglespecialworkspace,
bind = SUPER CTRL, S,   togglespecialworkspace,
bind = ALT,        Tab, cyclenext
bind = ALT,        Tab, bringactivetotop,   # bring it to the top

## Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = SUPER SHIFT, ampersand,  movetoworkspace, 1
bind = SUPER SHIFT, eacute,     movetoworkspace, 2
bind = SUPER SHIFT, quotedbl,   movetoworkspace, 3
bind = SUPER SHIFT, apostrophe, movetoworkspace, 4
bind = SUPER SHIFT, parenleft,  movetoworkspace, 5
bind = SUPER SHIFT, minus,      movetoworkspace, 6
bind = SUPER SHIFT, egrave,     movetoworkspace, 7
bind = SUPER SHIFT, underscore, movetoworkspace, 8
bind = SUPER SHIFT CTRL, Up,    movetoworkspacesilent, special
bind = SUPER ALT,         S,    movetoworkspacesilent, special

# Scroll through existing workspaces with (Control) + SUPER + scroll
bind = SUPER, mouse_up,          workspace, +1
bind = SUPER, mouse_down,        workspace, -1
bind = ControlSUPER, mouse_up,   workspace, +1
bind = ControlSUPER, mouse_down, workspace, -1

# Move/resize windows with SUPER + LMB/RMB and dragging
bindm = SUPER,      mouse:272, movewindow
bindm = SUPER,      mouse:273, resizewindow
bindm = SUPER,      mouse:274, movewindow
bindm = SUPER,      Z,         movewindow
bind  = SUPER CTRL, RETURN,    resizeactive, exact 640 480
